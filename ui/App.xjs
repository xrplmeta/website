import { Modal } from '@xjs/modal'
import { WindowWidth } from '@xjs/responsive'
import DevsIndex from './devs/Index.xjs'
import DevsDocs from './devs/docs/Index.xjs'
import DevsTokens from './devs/Tokens.xjs'
import IssuersIndex from './issuers/Index.xjs'
import IssuersDocs from './issuers/Docs.xjs'
import IssuersTokens from './issuers/Tokens.xjs'
import TokenDetails from './common/TokenDetails.xjs'
import TokenBackend from '../model/TokenBackend.js'

include '~/styles/vars.xcss'
include '~/styles/common.xcss'


export default x => {
	x.tokens = TokenBackend({
		node: 'wss://s1.xrplmeta.org'
	})

	function showSectionModal(active){
		let modal = x.frame.overlay(x => (
			<Modal dismissOn="outsideTap">
				<stack class="modal">
					<stack class="actions">
						<flex class="button sheet verbose" onclick={() => x.route.set('/') & modal.destroy()}>
							<icon asset="dot" class={active === 'developer' ? 'active' : ''}/>
							<stack>
								<label>For Developers</label>
								<text>All the details on how you can integrate this API into your app or project.</text>
							</stack>
							<icon class="chevron" asset="chevron-right"/>
						</flex>
						<flex class="separator"/>
						<flex class="button sheet verbose" onclick={() => x.route.set('/issuers') & modal.destroy()}>
							<icon asset="dot" class={active === 'issuer' ? 'active' : ''}/>
							<stack>
								<label>For Issuers</label>
								<text>Quick guidance on how to get your token or NFTs represented the best way possible.</text>
							</stack>
							<icon class="chevron" asset="chevron-right"/>
						</flex>
					</stack>
				</stack>
			</Modal>
		))
	}

	return x => (
		<root class="night">
			<title>Token & NFT Metadata on the XRP Ledger</title>
			<title suffix> - XRPL Meta</title>
			
			<header>
				<flex>
					<router>
						<route path="/*">
							<link onclick={() => showSectionModal('developer')}>
								<flex class="logo">
									<icon asset="logo"/>
									<stack>
										<label>XRPL META</label>
										<flex>
											<label class="issuers">for Developers</label>
											<icon asset="chevron-down"/>
										</flex>
									</stack>
								</flex>
							</link>
							<MainNav>
								<link to="/">Overview</link>
								<link to="/docs">Docs</link>
								<link to="/tokens">Tokens</link>
								<link class="github" to="https://github.com/Mwni/xrplmeta">
									<icon asset="github" key="github"/>
								</link>
							</MainNav>
						</route>
						<route path="/issuers/*">
							<link onclick={() => showSectionModal('issuer')}>
								<flex class="logo">
									<icon asset="logo"/>
									<stack>
										<label>XRPL META</label>
										<flex>
											<label class="issuers">for Issuers</label>
											<icon asset="chevron-down"/>
										</flex>
									</stack>
								</flex>
							</link>
							<MainNav>
								<link to="/issuers" strict>Overview</link>
								<link to="/issuers/docs">Docs</link>
								<link to="/issuers/tokens">Tokens</link>
								<link class="twitter" to="https://twitter.com/xrplmeta">
									<icon asset="twitter" key="twitter"/>
								</link>
							</MainNav>
						</route>
					</router>
				</flex>
			</header>

			<router>
				<route path="/">
					<DevsIndex/>
				</route>
				<route path="/docs">
					<DevsDocs/>
				</route>
				<route path="/tokens">
					<DevsTokens/>
				</route>
				<route path="/tokens/:token">
					<TokenDetails/>
				</route>
				<route path="/issuers">
					<IssuersIndex/>
				</route>
				<route path="/issuers/docs">
					<IssuersDocs/>
				</route>
				<route path="/issuers/tokens">
					<IssuersTokens/>
				</route>
				<route path="/*" bad={true}>
					<heading>Not Found</heading>
				</route>
			</router>

			<footer>
				<flex>
					<stack>
						<text>
							<span>Contact us on Twitter at </span>
							<link to ="https://twitter.com/xrplmeta">@xrplmeta</link>
							<span>.</span>
						</text>
						<text>
							<span>This project is created and maintained by </span>
							<link to ="https://twitter.com/MwniTheDev">Marc-Emanuel Otto</link>
							<span>.</span>
						</text>
					</stack>
					<stack>
						<link to="/privacy">Privacy Policy</link>
						<label>{new Date().getFullYear()} Â© XRPL META</label>
					</stack>
				</flex>
			</footer>
		</root>
	)
}

const MainNav = x => {

	return x => (
		<WindowWidth>
			<if below={640} solo>
				<button class="burger">
					<icon asset="menu"/>
				</button>
			</if>
			<if solo>
				<nav>
					{x.children}
				</nav>
			</if>
		</WindowWidth>
	)
}