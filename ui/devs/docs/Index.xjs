import { Endpoint } from 'docier/rest'
import { Command } from 'docier/websocket'
import { rest, websocket } from '~/defs/apis.js'
import Rest from './Rest.xjs'
import WebSocket from './WebSocket.xjs'
import Back from '~/ui/common/Back.xjs'

include '~/styles/devs/docs.xcss'


export default x => (
	<stack class="page docs">
		<router>
			<route path="/">
				<stack class="section page-width">
					<heading>Documentation</heading>
					<text>
						<span>All endpoints below are shown using the public node URL.
						This can be replaced with any other node, including a </span>
						<link to="/use">self-hosted node</link>.
					</text>
				</stack>
				<stack class="section page-width rest list">
					<heading>REST API</heading>
					{#for let endpoint of rest}
						<link to={`/docs/rest/${endpoint.id}`}>
							<Endpoint {...endpoint}/>
						</link>
					{/for}
				</stack>
				<stack class="section page-width websocket list">
					<heading>WebSocket API</heading>
					{#for let endpoint of websocket}
						<link to={`/docs/websocket/${endpoint.id}`}>
							<Command {...endpoint}/>
						</link>
					{/for}
				</stack>
				<stack class="section page-width public-nodes">
					<heading>Public Nodes</heading>
					<text>
						Feel free to use one of the publicly available nodes listed below.
					</text>
					<stack class="nodes">
						<flex>
							<icon asset="cube"/>
							<stack>
								<label class="domain">s1.xrplmeta.org</label>
								<label class="history">History: last 12 months</label>
							</stack>
						</flex>
						<flex class="offline">
							<icon asset="cube"/>
							<stack>
								<label class="domain">s2.xrplmeta.org</label>
								<label class="history">History: full history</label>
							</stack>
						</flex>
						<flex class="offline">
							<icon asset="cube"/>
							<stack>
								<label class="domain">sx.xrplmeta.org</label>
								<label class="history">Experimental NFT support</label>
							</stack>
						</flex>
					</stack>
					<text class="hint">
						Some nodes are still in development. More will be added soon.
					</text>
				</stack>
				<stack class="section page-width self-hosted">
					<heading>Host your own Node</heading>
					<text>
						If you prefer to be independent and have complete control over your API, 
						you can install the XRPL Meta Node software on your machine or server. You will need:
					</text>
					<ul>
						<li>Node.js version 14+</li>
						<li>NPM Package Manager</li>
						<li>At least 4 GB of disk storage</li>
					</ul>
					<text>
						Run the following command to install it as a global program:
					</text>
					<code>
						npm install -g xrplmeta
					</code>
					<text>
						<span>You now can start your node by running the </span><code>xrplmeta</code><span> command. </span>
						<span>Visit the </span><link to="https://github.com/Mwni/xrplmeta">GitHub Repository</link>
						<span> for additional instructions.</span>
					</text>
				</stack>
			</route>
			<route path="/rest/:operation">
				<Back/>
				<Provider type="rest">
					<Rest/>
				</Provider>
			</route>
			<route path="/websocket/:operation">
				<Back/>
				<Provider type="websocket">
					<WebSocket/>
				</Provider>
			</route>
		</router>
	</stack>
)

const Provider = x => {
	x.descriptor = x.attrs.type === 'rest'
		? rest.find(r => r.id === x.params.operation)
		: websocket.find(w => w.id === x.params.operation)

	return x => x.children
}